DateFormat


Celllayout 
构造函数
mTouchFeedbackView为按下时图标表面一层透明灰色动画效果。
addView(mTouchFeedbackView, (int) (grid.cellWidthPx * 1.5), (int) (grid.cellHeightPx * 1.5));
addView(mShortcutsAndWidgets);

CellLayout.addView(ShortcutAndWidgetContainer view)

拖动时shake动画
ReorderPreviewAnimation.animate()

CellLayout.LayoutParams 
boolean[][] mOccupied 桌面图标布局中是否有图标占位，存在为true
CellLayout.addViewToCellLayout方法赋值，这个方法在Workspace.addInScreen方法中调用，而桌面初始化时的bind过程会一直调用到这个方法。

CellLayout.performReorder()
CellLayout.findReorderSolution()
CellLayout.rearrangementExists()

CellLayout.attemptPushInDirection()
xy方向上均有作用力，先pushViewsToTempLocation()移动x轴，再移动y轴，若正方向上移动失败，换方向，若只有一个方向有作用力，以以下顺序推动，正方向，反方向，xy轴互换，xy轴互换反方向。
CellLayout.addViewsToTempLocation Views
推力没有成功，试着将Views整体移动到空位
CellLayout.addViewToTempLocation View
整体移动失败，试着单独移动

CellLayout.pushViewToTempLocation()
ViewCluster,记录了上下左右边上当前影响的Views的边界位置，用来表示Rect区域和别的Cell的关系。

拖动图标到新的位置时所引起的图标重排，受影响的图标会有一个shake的动画效果

Workspace.onDrop()流程
方法参数为DropTarget.DragObject对象，首先计算拖动View的视觉中心mDragViewVisualCenter，dropTargetLayout为Drop的Celllayout对象，下一步判断当前是否在Hotseat上，求出相对于dropTargetLayout的视觉中心坐标。如果DragObject.dragSource！=Worspace，转而调用onDropExternal()，否则继续调用onDrop()的内容。接着调用findNearestArea方法球drop的xy的值，Workspace.findNearestArea()调用到CellLayout.findNearestArea()

dragSource != this
onDropExternal()

findNearestArea()此时没有考虑位置是否被占
createUserFolderIfNecessary()
addToExistingFolderIfNecessary()

performReorder()

getDirectionVectorForDrop()用一个int数组direction来计算dragView推动别的View的力
getViewsIntersectingRegion()求出现在dragView影响的区域的Views，drop区域的Rect


